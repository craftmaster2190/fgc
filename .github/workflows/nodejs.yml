name: Test and Build

on: [push]
jobs:
  cancel:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.2.0
        with:
          workflow_id: 617433
          access_token: ${{ secrets.GITHUB_TOKEN }}

  owasp:
    name: OWASP
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "13"

      - name: Cache CVE Data
        uses: actions/cache@v1
        env:
          cache-name: cve
        with:
          path: ~/.gradle/dependency-check-data/
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('server/build.gradle') }}

      - name: Gradle Dependency Check Analyze
        working-directory: ./server
        run: ./gradlew dependencyCheckAnalyze

      - name: Gradle Dependency Updates Analyze
        working-directory: ./server
        run: ./gradlew checkDependencyUpdates

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: OWASP Files
          path: server/build/reports/

  build:
    name: Test and Build
    runs-on: macos-10.15
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache NVM
        uses: actions/cache@v1
        env:
          cache-name: nvm
        with:
          path: ~/.nvm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.nvmrc') }}

      - name: Setup NVM and Node
        run: |
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.2/install.sh | bash
          export NVM_DIR=$HOME/.nvm
          source $NVM_DIR/nvm.sh
          nvm install
          echo '[ -s "$HOME/.bashrc" ] && \. "$HOME/.bashrc"' >> $HOME/.bash_profile
          node --version

      - name: Setup Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash

      - name: Cache Node Modules
        uses: actions/cache@v1
        env:
          cache-name: node_modules
        with:
          path: client/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('client/package.json') }}

      - name: Yarn Install
        run: yarn --cwd client install

      - name: Yarn Test
        run: yarn --cwd client test-ci

      - name: Setup Sentry
        run: sed -i '' "s|XXX_SENTRY_DSN_XXX|${{ secrets.SENTRY_DSN }}|" client/src/index.html

      - name: Yarn Build
        run: yarn --cwd client build

      - name: Yarn Deploy
        run: yarn --cwd client deploy

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "13"

      - name: Cache Gradle
        uses: actions/cache@v1
        env:
          cache-name: gradle
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/*.gradle*') }}

      - name: Gradle Compile
        working-directory: ./server
        run: ./gradlew clean classes testClasses

      - name: Gradle Test
        working-directory: ./server
        run: ./gradlew test check

      - name: Gradle Build
        working-directory: ./server
        run: ./gradlew build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: Build Files
          path: server/build/libs/

      - name: Setup AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      - name: Upload Versioned Artifacts to S3
        run: ./push-to-s3.bash
